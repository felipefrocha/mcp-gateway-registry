# Registry Dockerfile - includes nginx, SSL, FAISS, models, and registry service
FROM python:3.12-slim

ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    UV_SYSTEM_PYTHON=true

# Install system dependencies including nginx with lua module and Node.js
RUN apt-get update && apt-get install -y --no-install-recommends \
    nginx \
    nginx-extras \
    lua-cjson \
    curl \
    procps \
    openssl \
    git \
    build-essential \
    ca-certificates \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the application code
COPY . /app/

# Copy nginx configuration
COPY docker/nginx_rev_proxy.conf /app/docker/nginx_rev_proxy.conf

# Build React frontend
WORKDIR /app/frontend
COPY frontend/package.json ./
RUN npm install --legacy-peer-deps
COPY frontend/ ./
RUN npm run build

# Return to app directory
WORKDIR /app

# Install uv and setup Python environment
RUN pip install uv && \
    uv pip install \
    "fastapi>=0.115.12" \
    "itsdangerous>=2.2.0" \
    "jinja2>=3.1.6" \
    "mcp>=1.6.0" \
    "pydantic>=2.11.3" \
    "httpx>=0.27.0" \
    "python-dotenv>=1.1.0" \
    "python-multipart>=0.0.20" \
    "uvicorn[standard]>=0.34.2" \
    "faiss-cpu>=1.7.4" \
    "sentence-transformers>=2.2.2" \
    "websockets>=15.0.1" \
    "scikit-learn>=1.3.0" \
    "torch>=1.6.0" \
    "huggingface-hub[cli,hf_xet]>=0.31.1" \
    "hf_xet>=0.1.0" && \
    uv pip install -e .

# Create logs directory
RUN mkdir -p /app/logs

# Expose ports for nginx (HTTP/HTTPS) and registry
EXPOSE 80 443 7860

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:7860/health || exit 1

# Entrypoint script that sets up everything from original entrypoint.sh
COPY docker/registry-entrypoint.sh /app/registry-entrypoint.sh
RUN chmod +x /app/registry-entrypoint.sh

ENTRYPOINT ["/app/registry-entrypoint.sh"] 