# Nginx configuration directive for handling long server names
server_names_hash_bucket_size 128;
http{
    variables_hash_max_size 2048;
    variables_hash_bucket_size 128;
}
# First server block now directly handles HTTP requests instead of redirecting
server {
    listen 80;
    server_name localhost mcpgateway.ddns.net {{EC2_PUBLIC_DNS}};

    # Add this to trigger the named location for 403 errors
    error_page 403 = @forbidden_error;

    # Route for Cost Explorer service
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Auth validation endpoint - passes entire request to auth server
    location = /validate {
        internal;
        
        proxy_pass http://auth-server:8888/validate;
        
        # Pass original request info
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Original-URL $scheme://$host$request_uri;

        # Extract and pass Cognito config headers from original request
        proxy_set_header X-User-Pool-Id $http_x_user_pool_id;
        proxy_set_header X-Client-Id $http_x_client_id;
        proxy_set_header X-Region $http_x_region;
        
        # Pass all original headers (including Authorization and X-Body from Lua)
        proxy_pass_request_headers on;
        
        # Short timeouts for auth validation
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_send_timeout 10s;
    }

    # OAuth2 Cognito callback endpoint
    location /oauth2/callback/cognito {
        proxy_pass http://auth-server:8888/oauth2/callback/cognito;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through all headers for OAuth2 flow
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
    }

    # OAuth2 Cognito login endpoint  
    location /oauth2/login/cognito {
        proxy_pass http://auth-server:8888/oauth2/login/cognito;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through query parameters and headers
        proxy_pass_request_headers on;
    }

    # OAuth2 Cognito logout endpoint
    location /oauth2/logout/ {
    proxy_pass http://auth-server:8888/oauth2/logout/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;
    }

    # REMOVE HARDCODED /mcpgw
    # location /mcpgw/ {
    #     proxy_pass http://127.0.0.1:8003/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /currenttime
    # location /currenttime/ {
    #     proxy_pass http://127.0.0.1:8001/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /fininfo
    # location /fininfo/ {
    #     proxy_pass http://127.0.0.1:8002/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     
    #     # Additional settings for SSE support
    #     proxy_set_header Connection '';
    #     chunked_transfer_encoding off;
    #     proxy_buffering off;
    #     proxy_cache off;
    #     proxy_read_timeout 3600s;
    # }

{{LOCATION_BLOCKS}}

    location /tsbedrock/ {
        # Fix the path handling by adding trailing slash and using $request_uri
        proxy_pass https://hwfo2k8szg.execute-api.us-east-1.amazonaws.com/prod/;
        
        # AWS API Gateway often needs Host header to match the API Gateway domain
        proxy_set_header Host hwfo2k8szg.execute-api.us-east-1.amazonaws.com;
        
        # These headers help with request routing
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API Gateway often requires these settings
        proxy_ssl_server_name on;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        
        # Adjust the rewrite to handle the path correctly
        rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    }
    
    # Error handlers for authentication failures
    location @auth_error {
        return 401 '{"error": "Authentication required"}';
        add_header Content-Type application/json;
        add_header Connection close;
    }
    
    location @forbidden_error {
        default_type application/json;
        return 403 '{"error": "Access forbidden"}';
        add_header Content-Type application/json always;
        add_header Connection close always;
    }

    error_log /var/log/nginx/error.log debug;
}

# Keep the HTTPS server for clients that prefer it
server {
    listen 443 ssl;
    server_name localhost mcpgateway.ddns.net {{EC2_PUBLIC_DNS}};

    # SSL Configuration using self-signed certs generated in Dockerfile
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # Stronger cipher suite
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Add this to trigger the named location for 403 errors
    error_page 403 = @forbidden_error;

    # Auth validation endpoint - passes entire request to auth server
    location = /validate {
        internal;
        
        proxy_pass http://auth-server:8888/validate;
        
        # Pass original request info
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Original-URL $scheme://$host$request_uri;

        # Extract and pass Cognito config headers from original request
        proxy_set_header X-User-Pool-Id $http_x_user_pool_id;
        proxy_set_header X-Client-Id $http_x_client_id;
        proxy_set_header X-Region $http_x_region;
        
        # Pass all original headers (including Authorization and X-Body from Lua)
        proxy_pass_request_headers on;
        
        # Short timeouts for auth validation
        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_send_timeout 10s;
    }
    
    # OAuth2 Cognito callback endpoint
    location /oauth2/callback/cognito {
        proxy_pass http://auth-server:8888/oauth2/callback/cognito;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through all headers for OAuth2 flow
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
    }

    # OAuth2 Cognito login endpoint  
    location /oauth2/login/cognito {
        proxy_pass http://auth-server:8888/oauth2/login/cognito;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass through query parameters and headers
        proxy_pass_request_headers on;
    }

    # OAuth2 Cognito logout endpoint
    location /oauth2/logout/ {
    proxy_pass http://auth-server:8888/oauth2/logout/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;
    }

    # Duplicate the same location blocks for HTTPS access
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # REMOVE HARDCODED /mcpgw
    # location /mcpgw/ {
    #     proxy_pass http://127.0.0.1:8003/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /currenttime
    # location /currenttime/ {
    #     proxy_pass http://127.0.0.1:8001/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /fininfo
    # location /fininfo/ {
    #     proxy_pass http://127.0.0.1:8002/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     
    #     # Additional settings for SSE support
    #     proxy_set_header Connection '';
    #     chunked_transfer_encoding off;
    #     proxy_buffering off;
    #     proxy_cache off;
    #     proxy_read_timeout 3600s;
    # }

{{LOCATION_BLOCKS}}

    location /tsbedrock/ {
        proxy_pass https://hwfo2k8szg.execute-api.us-east-1.amazonaws.com/prod/;
        proxy_set_header Host hwfo2k8szg.execute-api.us-east-1.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_ssl_server_name on;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    }
    
    # Error handlers for authentication failures
    location @auth_error {
        return 401 '{"error": "Authentication required"}';
        add_header Content-Type application/json;
        add_header Connection close;
    }
    
    location @forbidden_error {
        default_type application/json;
        return 403 '{"error": "Access forbidden"}';
        add_header Content-Type application/json always;
        add_header Connection close always;
    }
    
    error_log /var/log/nginx/error.log debug;
}